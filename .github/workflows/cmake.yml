name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        # These will make permutations
        os: [ubuntu-latest, windows-latest, macos-latest]
        generator: ["Unix Makefiles", "MSYS Makefiles"]
        # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
        build-type: [Release]
        build-static: [ON, OFF]
        # It's easier to exclude permutations based on a subset than to include each case as parameters grow
        exclude:
          - os: ubuntu-latest
            generator: "MSYS Makefiles"
          - os: macos-latest
            generator: "MSYS Makefiles"
          - os: windows-latest
            generator: "Unix Makefiles"

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies on windows
      if: startsWith(matrix.os, 'windows')
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: cmake zlib-devel

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -G "${{matrix.generator}}" -DCMAKE_BUILD_TYPE=${{matrix.build-type}} -DBUILD_STATIC=${{matrix.build-static}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest --output-on-failure
